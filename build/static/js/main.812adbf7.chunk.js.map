{"version":3,"sources":["components/Nav/Nav.module.scss","components/Card/Card.module.scss","components/CircularProgress/CircularProgress.module.scss","components/Nav/index.jsx","components/Card/index.jsx","components/CircularProgress/index.jsx","redux/characters/actionTypes.js","redux/characters/actions.js","redux/characters/selectors.js","pages/CharacterPage.jsx","redux/episodes/actionTypes.js","redux/episodes/actions.js","redux/episodes/selectors.js","pages/EpisodesPage.jsx","pages/HomePage.jsx","redux/locations/actionTypes.js","redux/locations/actions.js","redux/locations/selectors.js","pages/LocationPage.jsx","pages/LocationsPage.jsx","pages/NotFoundPage.jsx","App.jsx","redux/characters/reducer.js","redux/episodes/reducer.js","redux/locations/reducer.js","redux/rootReducer.js","api/axios.js","api/index.js","redux/characters/sagas.js","redux/episodes/sagas.js","redux/locations/sagas.js","redux/rootSaga.js","redux/store.js","index.jsx"],"names":["module","exports","Nav","className","styles","nav","navItem","activeClassName","navLinkActive","navLink","exact","to","Card","title","subtitle","image","horizontal","children","cx","card","cardHorizontal","alt","cardImage","src","cardBody","cardTitle","cardSubtitle","cardText","CircularProgress","container","circularProgress","circularProgressSvg","viewBox","circularProgressCircle","cy","fill","r","strokeWidth","FETCH_CHARACTERS","FETCH_SINGLE_CHARACTER","SET_CHARACTERS","ADD_CHARACTERS","SET_SELECTED_CHARACTER","SET_PAGE","SET_HAS_NEXT_PAGE","SET_ERROR_MESSAGE","setCharacters","items","type","ActionTypes","payload","setHasNextPage","value","setErrorMessage","errorMessage","selectCharactersState","state","characters","selectIsLoading","isLoading","selectCharacters","selectSingleCharacter","selected","selectPageNumber","page","number","selectHasNextPage","hasNext","CharacterPage","id","useParams","dispatch","useDispatch","useSelector","character","React","useEffect","fetchCharacterById","Object","keys","length","name","species","status","origin","gender","location","FETCH_EPISODES","SET_EPISODES","ADD_EPISODES","setEpisodes","selectEpisodesState","episodes","selectEpisodes","EpisodesPage","pageNumber","hasMore","dataLength","loader","next","map","episode","air_date","HomePage","FETCH_LOCATIONS","FETCH_SINGLE_LOCATION","SET_LOCATIONS","ADD_LOCATIONS","SET_SELECTED_LOCATION","setLocations","selectLocationsState","locations","selectLocations","selectSingleLocation","LocationPage","fetchLocationById","dimension","LocationsPage","NotFoundPage","App","component","path","charactersReducer","produce","draft","action","concat","reducer","combineReducers","locationsReducer","episodesReducer","axiosInstance","axios","create","baseURL","process","fetchCharacters","a","get","data","Error","fetchLocations","fetchEpisodes","fetchSingleCharacter","charactersSaga","call","Api","res","put","results","info","message","takeLatest","episodesSaga","fetchSingleLocation","locationsSaga","rootSaga","all","composeEnchancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","sagaMiddleware","createSagaMiddleware","store","createStore","rootReducer","applyMiddleware","run","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.812adbf7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Nav_nav__2_-2o\",\"navItem\":\"Nav_navItem__2ed0v\",\"navLink\":\"Nav_navLink__1vnX_\",\"navLinkActive\":\"Nav_navLinkActive__2aupA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__2Nth5\",\"cardHorizontal\":\"Card_cardHorizontal__1pTzh\",\"cardImage\":\"Card_cardImage__27oY8\",\"cardBody\":\"Card_cardBody__1a7RZ\",\"cardTitle\":\"Card_cardTitle__Y3dkZ\",\"cardSubtitle\":\"Card_cardSubtitle__-U-lB\",\"cardText\":\"Card_cardText__2XnHR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"CircularProgress_container__1xY2a\",\"circularProgress\":\"CircularProgress_circularProgress__pkfXP\",\"circular-progress-keyframes-circular-rotate\":\"CircularProgress_circular-progress-keyframes-circular-rotate__sIVk4\",\"circularProgressSvg\":\"CircularProgress_circularProgressSvg__1csb4\",\"circularProgressCircle\":\"CircularProgress_circularProgressCircle__32_KL\",\"circular-progress-keyframes-circular-dash\":\"CircularProgress_circular-progress-keyframes-circular-dash__1gFh9\"};","import { NavLink } from 'react-router-dom';\n\nimport styles from './Nav.module.scss';\n\nconst Nav = () => (\n  <ul className={styles.nav}>\n    <li className={styles.navItem}>\n      <NavLink\n        activeClassName={styles.navLinkActive}\n        className={styles.navLink}\n        exact\n        to=\"/\"\n      >\n        characters\n      </NavLink>\n    </li>\n    <li className={styles.navItem}>\n      <NavLink\n        activeClassName={styles.navLinkActive}\n        className={styles.navLink}\n        to=\"/location\"\n      >\n        locations\n      </NavLink>\n    </li>\n    <li className={styles.navItem}>\n      <NavLink\n        activeClassName={styles.navLinkActive}\n        className={styles.navLink}\n        to=\"/episodes\"\n      >\n        episodes\n      </NavLink>\n    </li>\n  </ul>\n);\n\nexport default Nav;\n","import cx from 'classnames';\n\nimport styles from './Card.module.scss';\n\nconst Card = ({ title, subtitle, image, horizontal = false, children }) => (\n  <article\n    className={cx(styles.card, {\n      [styles.cardHorizontal]: horizontal,\n    })}\n  >\n    {image && <img alt={title} className={styles.cardImage} src={image} />}\n    <div className={styles.cardBody}>\n      <p className={styles.cardTitle}>{title}</p>\n      {subtitle && (\n        <p className={cx('hint', styles.cardSubtitle)}>{subtitle}</p>\n      )}\n      {children && <div className={styles.cardText}>{children}</div>}\n    </div>\n  </article>\n);\n\nexport default Card;\n","import styles from './CircularProgress.module.scss';\n\nconst CircularProgress = () => (\n  <div className={styles.container}>\n    <div className={styles.circularProgress}>\n      <svg className={styles.circularProgressSvg} viewBox=\"22 22 44 44\">\n        <circle\n          className={styles.circularProgressCircle}\n          cx=\"44\"\n          cy=\"44\"\n          fill=\"none\"\n          r=\"20.2\"\n          strokeWidth=\"3.6\"\n        />\n      </svg>\n    </div>\n  </div>\n);\n\nexport default CircularProgress;\n","export const FETCH_CHARACTERS = 'characters/FETCH';\nexport const FETCH_SINGLE_CHARACTER = 'characters/FETCH_SINGLE';\nexport const SET_CHARACTERS = 'characters/SET';\nexport const ADD_CHARACTERS = 'characters/ADD';\nexport const SET_SELECTED_CHARACTER = 'characters/SET_SELECTED';\nexport const SET_PAGE = 'characters/SET_PAGE';\nexport const SET_HAS_NEXT_PAGE = 'characters/SET_HAS_NEXT_PAGE';\nexport const SET_ERROR_MESSAGE = 'characters/SET_ERROR';\n","import * as ActionTypes from './actionTypes';\n\nexport const fetchCharacters = () => ({\n  type: ActionTypes.FETCH_CHARACTERS,\n});\n\nexport const setCharacters = (items) => ({\n  type: ActionTypes.SET_CHARACTERS,\n  payload: items,\n});\n\nexport const addCharacters = (items) => ({\n  type: ActionTypes.ADD_CHARACTERS,\n  payload: items,\n});\n\nexport const fetchCharacterById = (id) => ({\n  type: ActionTypes.FETCH_SINGLE_CHARACTER,\n  payload: id,\n});\n\nexport const setSelectedCharacter = (item) => ({\n  type: ActionTypes.SET_SELECTED_CHARACTER,\n  payload: item,\n});\n\nexport const setPage = (page) => ({\n  type: ActionTypes.SET_PAGE,\n  payload: page,\n});\n\nexport const setHasNextPage = (value) => ({\n  type: ActionTypes.SET_HAS_NEXT_PAGE,\n  payload: value,\n});\n\nexport const setErrorMessage = (errorMessage) => ({\n  type: ActionTypes.SET_ERROR_MESSAGE,\n  payload: errorMessage,\n});\n","export const selectCharactersState = (state) => state.characters;\n\nexport const selectIsLoading = (state) =>\n  selectCharactersState(state).isLoading;\n\nexport const selectCharacters = (state) => selectCharactersState(state).items;\n\nexport const selectSingleCharacter = (state) =>\n  selectCharactersState(state).selected;\n\nexport const selectPageNumber = (state) =>\n  selectCharactersState(state).page.number;\n\nexport const selectHasNextPage = (state) =>\n  selectCharactersState(state).page.hasNext;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link, useParams } from 'react-router-dom';\n\nimport Card from '../components/Card';\nimport CircularProgress from '../components/CircularProgress';\nimport { fetchCharacterById } from '../redux/characters/actions';\nimport {\n  selectIsLoading,\n  selectSingleCharacter,\n} from '../redux/characters/selectors';\n\nconst CharacterPage = () => {\n  const { id } = useParams();\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const character = useSelector(selectSingleCharacter);\n\n  React.useEffect(() => {\n    dispatch(fetchCharacterById(id));\n  }, []);\n\n  if (Object.keys(character).length === 0) {\n    return (\n      <section>\n        <Link className=\"section__link\" to=\"/\">\n          &larr; Go back\n        </Link>\n        <h3>There is no character...</h3>\n      </section>\n    );\n  }\n\n  const { name, image, species, status, origin, gender, location } = character;\n\n  return (\n    <section>\n      <Link className=\"section__link\" to=\"/\">\n        &larr; Go back\n      </Link>\n      {isLoading ? (\n        <CircularProgress />\n      ) : (\n        <Card\n          horizontal\n          image={image}\n          subtitle={`${species} ${status}`}\n          title={name}\n        >\n          <div>{origin.name}</div>\n          <div>\n            Gender: <span className=\"hint\">{gender}</span>\n          </div>\n          <div>\n            Last known location: <span className=\"hint\">{location.name}</span>\n          </div>\n        </Card>\n      )}\n    </section>\n  );\n};\n\nexport default CharacterPage;\n","export const FETCH_EPISODES = 'episodes/FETCH';\nexport const SET_EPISODES = 'episodes/SET';\nexport const ADD_EPISODES = 'episodes/ADD';\nexport const SET_PAGE = 'episodes/SET_PAGE';\nexport const SET_HAS_NEXT_PAGE = 'episodes/SET_HAS_NEXT_PAGE';\nexport const SET_ERROR_MESSAGE = 'episodes/SET_ERROR';\n","import * as ActionTypes from './actionTypes';\n\nexport const fetchEpisodes = () => ({\n  type: ActionTypes.FETCH_EPISODES,\n});\n\nexport const setEpisodes = (items) => ({\n  type: ActionTypes.SET_EPISODES,\n  payload: items,\n});\n\nexport const addEpisodes = (items) => ({\n  type: ActionTypes.ADD_EPISODES,\n  payload: items,\n});\n\nexport const setPage = (page) => ({\n  type: ActionTypes.SET_PAGE,\n  payload: page,\n});\n\nexport const setHasNextPage = (value) => ({\n  type: ActionTypes.SET_HAS_NEXT_PAGE,\n  payload: value,\n});\n\nexport const setErrorMessage = (errorMessage) => ({\n  type: ActionTypes.SET_ERROR_MESSAGE,\n  payload: errorMessage,\n});\n","export const selectEpisodesState = (state) => state.episodes;\n\nexport const selectIsLoading = (state) => selectEpisodesState(state).isLoading;\n\nexport const selectEpisodes = (state) => selectEpisodesState(state).items;\n\nexport const selectPageNumber = (state) =>\n  selectEpisodesState(state).page.number;\n\nexport const selectHasNextPage = (state) =>\n  selectEpisodesState(state).page.hasNext;\n","/* eslint-disable camelcase */\n// TODO: normalize air_date\nimport React from 'react';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport Card from '../components/Card';\nimport CircularProgress from '../components/CircularProgress';\nimport { fetchEpisodes, setPage } from '../redux/episodes/actions';\nimport {\n  selectEpisodes,\n  selectHasNextPage,\n  selectIsLoading,\n  selectPageNumber,\n} from '../redux/episodes/selectors';\n\nconst EpisodesPage = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const episodes = useSelector(selectEpisodes);\n  const pageNumber = useSelector(selectPageNumber);\n  const hasMore = useSelector(selectHasNextPage);\n\n  React.useEffect(() => {\n    dispatch(fetchEpisodes());\n  }, []);\n\n  return (\n    <section>\n      {isLoading ? (\n        <CircularProgress />\n      ) : (\n        <InfiniteScroll\n          dataLength={episodes.length}\n          hasMore={hasMore}\n          loader={<CircularProgress />}\n          next={() => dispatch(setPage(pageNumber + 1))}\n        >\n          <ul className=\"grid-list\">\n            {episodes?.map(({ id, name, episode, air_date }) => (\n              <li key={id}>\n                <Card subtitle={`${episode} ${air_date}`} title={name} />\n              </li>\n            ))}\n          </ul>\n        </InfiniteScroll>\n      )}\n    </section>\n  );\n};\n\nexport default EpisodesPage;\n","import React from 'react';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nimport Card from '../components/Card';\nimport CircularProgress from '../components/CircularProgress';\nimport { fetchCharacters, setPage } from '../redux/characters/actions';\nimport {\n  selectCharacters,\n  selectHasNextPage,\n  selectIsLoading,\n  selectPageNumber,\n} from '../redux/characters/selectors';\n\nconst HomePage = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const characters = useSelector(selectCharacters);\n  const pageNumber = useSelector(selectPageNumber);\n  const hasMore = useSelector(selectHasNextPage);\n\n  React.useEffect(() => {\n    dispatch(fetchCharacters());\n  }, []);\n\n  return (\n    <section>\n      {isLoading ? (\n        <CircularProgress />\n      ) : (\n        <InfiniteScroll\n          dataLength={characters.length}\n          hasMore={hasMore}\n          loader={<CircularProgress />}\n          next={() => dispatch(setPage(pageNumber + 1))}\n        >\n          <ul className=\"grid-list\">\n            {characters?.map(({ id, name, image, species, status }) => (\n              <li key={id}>\n                <Link className=\"grid-list__link\" to={`/character/${id}`}>\n                  <Card\n                    image={image}\n                    subtitle={`${species} ${status}`}\n                    title={name}\n                  />\n                </Link>\n              </li>\n            ))}\n          </ul>\n        </InfiniteScroll>\n      )}\n    </section>\n  );\n};\n\nexport default HomePage;\n","export const FETCH_LOCATIONS = 'locations/FETCH';\nexport const FETCH_SINGLE_LOCATION = 'locations/FETCH_SINGLE';\nexport const SET_LOCATIONS = 'locations/SET';\nexport const ADD_LOCATIONS = 'locations/ADD';\nexport const SET_SELECTED_LOCATION = 'locations/SET_SELECTED';\nexport const SET_PAGE = 'locations/SET_PAGE';\nexport const SET_HAS_NEXT_PAGE = 'locations/SET_HAS_NEXT_PAGE';\nexport const SET_ERROR_MESSAGE = 'locations/SET_ERROR';\n","import * as ActionTypes from './actionTypes';\n\nexport const fetchLocations = () => ({\n  type: ActionTypes.FETCH_LOCATIONS,\n});\n\nexport const setLocations = (items) => ({\n  type: ActionTypes.SET_LOCATIONS,\n  payload: items,\n});\n\nexport const addLocations = (items) => ({\n  type: ActionTypes.ADD_LOCATIONS,\n  payload: items,\n});\n\nexport const fetchLocationById = (id) => ({\n  type: ActionTypes.FETCH_SINGLE_LOCATION,\n  payload: id,\n});\n\nexport const setSelectedLocation = (item) => ({\n  type: ActionTypes.SET_SELECTED_LOCATION,\n  payload: item,\n});\n\nexport const setPage = (page) => ({\n  type: ActionTypes.SET_PAGE,\n  payload: page,\n});\n\nexport const setHasNextPage = (value) => ({\n  type: ActionTypes.SET_HAS_NEXT_PAGE,\n  payload: value,\n});\n\nexport const setErrorMessage = (errorMessage) => ({\n  type: ActionTypes.SET_ERROR_MESSAGE,\n  payload: errorMessage,\n});\n","export const selectLocationsState = (state) => state.locations;\n\nexport const selectIsLoading = (state) => selectLocationsState(state).isLoading;\n\nexport const selectLocations = (state) => selectLocationsState(state).items;\n\nexport const selectSingleLocation = (state) =>\n  selectLocationsState(state).selected;\n\nexport const selectPageNumber = (state) =>\n  selectLocationsState(state).page.number;\n\nexport const selectHasNextPage = (state) =>\n  selectLocationsState(state).page.hasNext;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link, useParams } from 'react-router-dom';\n\nimport Card from '../components/Card';\nimport CircularProgress from '../components/CircularProgress';\nimport { fetchLocationById } from '../redux/locations/actions';\nimport {\n  selectIsLoading,\n  selectSingleLocation,\n} from '../redux/locations/selectors';\n\nconst LocationPage = () => {\n  const { id } = useParams();\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const location = useSelector(selectSingleLocation);\n\n  React.useEffect(() => {\n    dispatch(fetchLocationById(id));\n  }, []);\n\n  if (Object.keys(location).length === 0) {\n    return (\n      <section>\n        <Link className=\"section__link\" to=\"/location\">\n          &larr; Go back\n        </Link>\n        <h3>There is no location...</h3>\n      </section>\n    );\n  }\n\n  const { name, type, dimension } = location;\n\n  return (\n    <section>\n      <Link className=\"section__link\" to=\"/location\">\n        &larr; Go back\n      </Link>\n      {isLoading ? (\n        <CircularProgress />\n      ) : (\n        <Card horizontal subtitle={`${type} ${dimension}`} title={name} />\n      )}\n    </section>\n  );\n};\n\nexport default LocationPage;\n","import React from 'react';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nimport Card from '../components/Card';\nimport CircularProgress from '../components/CircularProgress';\nimport { fetchLocations, setPage } from '../redux/locations/actions';\nimport {\n  selectHasNextPage,\n  selectIsLoading,\n  selectLocations,\n  selectPageNumber,\n} from '../redux/locations/selectors';\n\nconst LocationsPage = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const locations = useSelector(selectLocations);\n  const pageNumber = useSelector(selectPageNumber);\n  const hasMore = useSelector(selectHasNextPage);\n\n  React.useEffect(() => {\n    dispatch(fetchLocations());\n  }, []);\n\n  return (\n    <section>\n      {isLoading ? (\n        <CircularProgress />\n      ) : (\n        <InfiniteScroll\n          dataLength={locations.length}\n          hasMore={hasMore}\n          loader={<CircularProgress />}\n          next={() => dispatch(setPage(pageNumber + 1))}\n        >\n          <ul className=\"grid-list\">\n            {locations?.map(({ id, name, type, dimension }) => (\n              <li key={id}>\n                <Link className=\"grid-list__link\" to={`/location/${id}`}>\n                  <Card subtitle={`${type} ${dimension}`} title={name} />\n                </Link>\n              </li>\n            ))}\n          </ul>\n        </InfiniteScroll>\n      )}\n    </section>\n  );\n};\n\nexport default LocationsPage;\n","import { Link } from 'react-router-dom';\n\nconst NotFoundPage = () => (\n  <section className=\"not-found\">\n    <h3 className=\"h3\">404</h3>\n    <h5 className=\"h5\">Something&apos;s missing</h5>\n    <p>\n      The link you followed probably broken\n      <br /> or the page has been removed\n    </p>\n    <Link to=\"/\">&larr; Return homepage</Link>\n  </section>\n);\n\nexport default NotFoundPage;\n","import { Route, Switch } from 'react-router-dom';\n\nimport Nav from './components/Nav';\nimport CharacterPage from './pages/CharacterPage';\nimport EpisodesPage from './pages/EpisodesPage';\nimport HomePage from './pages/HomePage';\nimport LocationPage from './pages/LocationPage';\nimport LocationsPage from './pages/LocationsPage';\nimport NotFoundPage from './pages/NotFoundPage';\n\nconst App = () => (\n  <div className=\"container\">\n    <header className=\"header\">\n      <h1>Rick and Morty</h1>\n      <Nav />\n    </header>\n    <main className=\"main\">\n      <Switch>\n        <Route component={HomePage} exact path=\"/\" />\n        <Route component={CharacterPage} exact path=\"/character/:id(\\d+)\" />\n        <Route component={LocationsPage} exact path=\"/location\" />\n        <Route component={LocationPage} exact path=\"/location/:id(\\d+)\" />\n        <Route component={EpisodesPage} exact path=\"/episodes\" />\n        <Route component={NotFoundPage} path=\"*\" />\n      </Switch>\n    </main>\n  </div>\n);\n\nexport default App;\n","/* eslint-disable no-param-reassign */\nimport produce from 'immer';\n\nimport * as ActionTypes from './actionTypes';\n\nconst initialState = {\n  items: [],\n  page: {\n    number: 1,\n    hasNext: false,\n  },\n  selected: {},\n  isLoading: false,\n  errorMessage: '',\n};\n\nconst charactersReducer = produce((draft, action) => {\n  switch (action.type) {\n    case ActionTypes.FETCH_CHARACTERS:\n      draft.isLoading = true;\n      break;\n\n    case ActionTypes.SET_CHARACTERS:\n      draft.isLoading = false;\n      draft.items = action.payload;\n      break;\n\n    case ActionTypes.ADD_CHARACTERS:\n      draft.isLoading = false;\n      draft.items = draft.items.concat(action.payload);\n      break;\n\n    case ActionTypes.FETCH_SINGLE_CHARACTER:\n      draft.isLoading = true;\n      break;\n\n    case ActionTypes.SET_SELECTED_CHARACTER:\n      draft.isLoading = false;\n      draft.selected = action.payload;\n      break;\n\n    case ActionTypes.SET_PAGE:\n      draft.page.number = action.payload;\n      break;\n\n    case ActionTypes.SET_HAS_NEXT_PAGE:\n      draft.page.hasNext = action.payload;\n      break;\n\n    case ActionTypes.SET_ERROR_MESSAGE:\n      draft.isLoading = false;\n      draft.errorMessage = action.payload;\n      break;\n\n    default:\n      break;\n  }\n}, initialState);\n\nexport default charactersReducer;\n","/* eslint-disable no-param-reassign */\nimport produce from 'immer';\n\nimport * as ActionTypes from './actionTypes';\n\nconst initialState = {\n  items: [],\n  page: {\n    number: 1,\n    hasNext: false,\n  },\n  isLoading: false,\n  errorMessage: '',\n};\n\nconst charactersReducer = produce((draft, action) => {\n  switch (action.type) {\n    case ActionTypes.FETCH_EPISODES:\n      draft.isLoading = true;\n      break;\n\n    case ActionTypes.SET_EPISODES:\n      draft.isLoading = false;\n      draft.items = action.payload;\n      break;\n\n    case ActionTypes.ADD_EPISODES:\n      draft.isLoading = false;\n      draft.items = draft.items.concat(action.payload);\n      break;\n\n    case ActionTypes.SET_PAGE:\n      draft.page.number = action.payload;\n      break;\n\n    case ActionTypes.SET_HAS_NEXT_PAGE:\n      draft.page.hasNext = action.payload;\n      break;\n\n    case ActionTypes.SET_ERROR_MESSAGE:\n      draft.isLoading = false;\n      draft.errorMessage = action.payload;\n      break;\n\n    default:\n      break;\n  }\n}, initialState);\n\nexport default charactersReducer;\n","/* eslint-disable no-param-reassign */\nimport produce from 'immer';\n\nimport * as ActionTypes from './actionTypes';\n\nconst initialState = {\n  items: [],\n  page: {\n    number: 1,\n    hasNext: false,\n  },\n  selected: {},\n  isLoading: false,\n  errorMessage: '',\n};\n\nconst charactersReducer = produce((draft, action) => {\n  switch (action.type) {\n    case ActionTypes.FETCH_LOCATIONS:\n      draft.isLoading = true;\n      break;\n\n    case ActionTypes.SET_LOCATIONS:\n      draft.isLoading = false;\n      draft.items = action.payload;\n      break;\n\n    case ActionTypes.ADD_LOCATIONS:\n      draft.isLoading = false;\n      draft.items = draft.items.concat(action.payload);\n      break;\n\n    case ActionTypes.FETCH_SINGLE_LOCATION:\n      draft.isLoading = true;\n      break;\n\n    case ActionTypes.SET_SELECTED_LOCATION:\n      draft.isLoading = false;\n      draft.selected = action.payload;\n      break;\n\n    case ActionTypes.SET_PAGE:\n      draft.page.number = action.payload;\n      break;\n\n    case ActionTypes.SET_HAS_NEXT_PAGE:\n      draft.page.hasNext = action.payload;\n      break;\n\n    case ActionTypes.SET_ERROR_MESSAGE:\n      draft.isLoading = false;\n      draft.errorMessage = action.payload;\n      break;\n\n    default:\n      break;\n  }\n}, initialState);\n\nexport default charactersReducer;\n","import { combineReducers } from 'redux';\n\nimport charactersReducer from './characters/reducer';\nimport episodesReducer from './episodes/reducer';\nimport locationsReducer from './locations/reducer';\n\nconst reducer = combineReducers({\n  characters: charactersReducer,\n  locations: locationsReducer,\n  episodes: episodesReducer,\n});\n\nexport default reducer;\n","import axios from 'axios';\n\nconst axiosInstance = axios.create({\n  baseURL: process.env.REACT_APP_API_ENDPOINT,\n});\n\nexport default axiosInstance;\n","import axios from './axios';\n\nexport const fetchCharacters = async (page = 1) => {\n  try {\n    const { data } = await axios.get(`/character?page=${page}`);\n    return data;\n  } catch (e) {\n    throw new Error(e);\n  }\n};\n\nexport const fetchCharacterById = async (id) => {\n  try {\n    const { data } = await axios.get(`/character/${id}`);\n    return data;\n  } catch (e) {\n    throw new Error(e);\n  }\n};\n\nexport const fetchLocations = async (page = 1) => {\n  try {\n    const { data } = await axios.get(`/location?page=${page}`);\n    return data;\n  } catch (e) {\n    throw new Error(e);\n  }\n};\n\nexport const fetchLocationById = async (id) => {\n  try {\n    const { data } = await axios.get(`/location/${id}`);\n    return data;\n  } catch (e) {\n    throw new Error(e);\n  }\n};\n\nexport const fetchEpisodes = async (page = 1) => {\n  try {\n    const { data } = await axios.get(`/episode?page=${page}`);\n    return data;\n  } catch (e) {\n    throw new Error(e);\n  }\n};\n","import { call, put, takeLatest } from 'redux-saga/effects';\n\nimport * as Api from '../../api';\nimport {\n  addCharacters,\n  setCharacters,\n  setErrorMessage,\n  setHasNextPage,\n  setSelectedCharacter,\n} from './actions';\nimport * as ActionTypes from './actionTypes';\n\nfunction* fetchCharacters(action) {\n  try {\n    let res;\n    if (action.payload) {\n      res = yield call(Api.fetchCharacters, action.payload);\n      yield put(addCharacters(res.results));\n    } else {\n      res = yield call(Api.fetchCharacters);\n      yield put(setCharacters(res.results));\n    }\n\n    if (res.info.next) {\n      yield put(setHasNextPage(true));\n    } else {\n      yield put(setHasNextPage(false));\n    }\n  } catch (e) {\n    yield put(setErrorMessage(e.message));\n  }\n}\n\nfunction* fetchSingleCharacter(action) {\n  try {\n    const character = yield call(Api.fetchCharacterById, action.payload);\n    yield put(setSelectedCharacter(character));\n  } catch (e) {\n    yield put(setErrorMessage(e.message));\n  }\n}\n\nexport default function* charactersSaga() {\n  yield takeLatest(ActionTypes.FETCH_CHARACTERS, fetchCharacters);\n  yield takeLatest(ActionTypes.SET_PAGE, fetchCharacters);\n  yield takeLatest(ActionTypes.FETCH_SINGLE_CHARACTER, fetchSingleCharacter);\n}\n","import { call, put, takeLatest } from 'redux-saga/effects';\n\nimport * as Api from '../../api';\nimport {\n  addEpisodes,\n  setEpisodes,\n  setErrorMessage,\n  setHasNextPage,\n} from './actions';\nimport * as ActionTypes from './actionTypes';\n\nfunction* fetchEpisodes(action) {\n  try {\n    let res;\n    if (action.payload) {\n      res = yield call(Api.fetchEpisodes, action.payload);\n      yield put(addEpisodes(res.results));\n    } else {\n      res = yield call(Api.fetchEpisodes);\n      yield put(setEpisodes(res.results));\n    }\n\n    if (res.info.next) {\n      yield put(setHasNextPage(true));\n    } else {\n      yield put(setHasNextPage(false));\n    }\n  } catch (e) {\n    yield put(setErrorMessage(e.message));\n  }\n}\n\nexport default function* episodesSaga() {\n  yield takeLatest(ActionTypes.FETCH_EPISODES, fetchEpisodes);\n  yield takeLatest(ActionTypes.SET_PAGE, fetchEpisodes);\n}\n","import { call, put, takeLatest } from 'redux-saga/effects';\n\nimport * as Api from '../../api';\nimport {\n  addLocations,\n  setErrorMessage,\n  setHasNextPage,\n  setLocations,\n  setSelectedLocation,\n} from './actions';\nimport * as ActionTypes from './actionTypes';\n\nfunction* fetchLocations(action) {\n  try {\n    let res;\n    if (action.payload) {\n      res = yield call(Api.fetchLocations, action.payload);\n      yield put(addLocations(res.results));\n    } else {\n      res = yield call(Api.fetchLocations);\n      yield put(setLocations(res.results));\n    }\n\n    if (res.info.next) {\n      yield put(setHasNextPage(true));\n    } else {\n      yield put(setHasNextPage(false));\n    }\n  } catch (e) {\n    yield put(setErrorMessage(e.message));\n  }\n}\n\nfunction* fetchSingleLocation(action) {\n  try {\n    const character = yield call(Api.fetchLocationById, action.payload);\n    yield put(setSelectedLocation(character));\n  } catch (e) {\n    yield put(setErrorMessage(e.message));\n  }\n}\n\nexport default function* locationsSaga() {\n  yield takeLatest(ActionTypes.FETCH_LOCATIONS, fetchLocations);\n  yield takeLatest(ActionTypes.SET_PAGE, fetchLocations);\n  yield takeLatest(ActionTypes.FETCH_SINGLE_LOCATION, fetchSingleLocation);\n}\n","import { all } from 'redux-saga/effects';\n\nimport charactersSaga from './characters/sagas';\nimport episodesSaga from './episodes/sagas';\nimport locationsSaga from './locations/sagas';\n\nfunction* rootSaga() {\n  yield all([charactersSaga(), locationsSaga(), episodesSaga()]);\n}\n\nexport default rootSaga;\n","import { applyMiddleware, compose, createStore } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\n\nimport rootReducer from './rootReducer';\nimport rootSaga from './rootSaga';\n\nconst composeEnchancers =\n  (typeof window !== 'undefined' &&\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) ||\n  compose;\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst store = createStore(\n  rootReducer,\n  composeEnchancers(applyMiddleware(sagaMiddleware))\n);\n\nsagaMiddleware.run(rootSaga);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport './scss/app.scss';\n\nimport App from './App';\nimport store from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Router>\n        <App />\n      </Router>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}